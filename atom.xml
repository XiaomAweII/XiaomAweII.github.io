<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xiaoweii</title>
  
  
  <link href="http://blog.xiaoweii.xyz/atom.xml" rel="self"/>
  
  <link href="http://blog.xiaoweii.xyz/"/>
  <updated>2024-09-01T16:32:03.471Z</updated>
  <id>http://blog.xiaoweii.xyz/</id>
  
  <author>
    <name>xiaoweii</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot学习日记(一)</title>
    <link href="http://blog.xiaoweii.xyz/2024/09/02/SpringBoot%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0(%E4%B8%80)/"/>
    <id>http://blog.xiaoweii.xyz/2024/09/02/SpringBoot%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0(%E4%B8%80)/</id>
    <published>2024-09-01T16:27:43.000Z</published>
    <updated>2024-09-01T16:32:03.471Z</updated>
    
    <content type="html"><![CDATA[<p>​# SpringBoot学习日记(一)</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在看完黑马的SpringBoot系列课程之后, 趁热打铁, 记忆还是崭新的时刻, 整理一下笔记, 方便以后查阅, 同时有不懂的地方或者理解不到位的互相学习一下.<br>先来说一下为什么要学习SpringBoot, 这是Spring家族当中极为重要的一环, 如果开发Spring程序不用SpringBoot就是在跟自己过不去了.<br>SpringBoot为我们开发Spring程序提供了太多的帮助, 这门技术是用来加速开发Spring程序的, 因此学习起来需要一定门槛, 就像SSM框架, Java基础部分都需要熟练掌握, 如果这些没有掌握的话, 建议先熟练掌握对应的知识, 不然无法理解Spring配合在一起工作的一对技术到底是怎么一回事, 这些搞不明白, 最终只能学个皮毛, 毫无效果. 或者学着学着就会发现其他技术不太过关, 然后就学不下去了, 然后就没有然后了. 所以要是想学好这门技术, 还是循序渐进的来.<br>当然也可以看我的其他笔记, 如果没有的话记得联系我, 可能是上传的时候丢失或者我还没有整理出来, 我会尽量整理自己这一路学习java的艰苦历程, 自己一个人闷头学踩过很多坑, 在学习的路上能够有个人相互交流, 进步飞快, 最后, 衷心祝福大家也送给自己, 人生最重要的事情就是投资自己, 其次都是其次了, 不管前路多么漫漫, 守得云开见月明, 终有一天我们会破茧化蝶, 一起努力!!!Orz…<br>关于学习还有一句话想送给大家, 在第一次学习的时候不必要想太深, 有时候身在其中不知其所以然, 向前走, 回头看, 会发现困扰我们的所谓的原理, 应用都会迎刃而解, 把握好自己所处的阶段, 发挥自身优势, 使得学习效率最大号-.-</p><h2 id="快速上手SpringBoot"><a href="#快速上手SpringBoot" class="headerlink" title="快速上手SpringBoot"></a>快速上手SpringBoot</h2><p>网上的任何一门技术课程, 开篇先告诉你学习这门技术的时代背景, 多么火热, 为什么要学习, 如果大家感兴趣的话可以去网上找一下SpringBoot发展历史, 以及很多博主分析互联网的很多厂都在使用哪些技术, SpringBoot的占比多少.<br>简单了解就是SpringBoot技术由Pivotal团队研发制作, 最主要就是加速对Spring程序的开发, 这个加速需要从两个方面来说</p><ul><li>Spring程序的初始搭建过程</li><li>Spring程序的开发过程<br>那这是什么意思呢?</li></ul><ol><li>不仅仅是我们觉得在之前搭建Spring程序的时候, 首先需要创建至少一个配置文件或者配置类, 用来配置Spring的配置信息, 然后再去写映射文件的配置信息等等, SpringBoot开发团队也认为原始的Spring程序初始搭建的时候非常繁琐, 这些用来描述Spring配置信息的文件, 可不可以不写? 此外现在企业级开发使用Spring大部分情况下是用于做web开发, 如果web开发的话, 还需要加载web环境时加载指定的spring配置, 这都是最基本的需求了, 不写的话, 他怎么知道加载哪个配置文件&#x2F;配置类呢? 那换了SpringBoot技术以后, 这些还要写吗? 一会儿我们便可以回答这个问题.</li><li>SpringBoot开发团队认为原始的Spring程序开发的过程也有些繁琐，这个过程仍然可以简化。开发过程无外乎使用什么技术，导入对应的jar包（或坐标）然后将这个技术的核心对象交给Spring容器管理，也就是配置成Spring容器管控的bean就可以了。这些基本操作，难道这些东西SpringBoot也能帮我们简化？</li></ol><h3 id="SpringBoot快速构建程序-一"><a href="#SpringBoot快速构建程序-一" class="headerlink" title="SpringBoot快速构建程序(一)"></a>SpringBoot快速构建程序(一)</h3><p>线面使用SpringBoot技术快速构建一个SpringMVC的程序, 通过这个过程体会**’简化’**二字的含义<br><strong>步骤1</strong>: 创建项目&#x2F;新模块, 选择Spring Initializr, 并配置模块相关基础信息, 如果没有的话选SpringBoot<br><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240901235038.png" alt="20240901235038"><br>选择java版本和你当前计算机上安装的JDK版本匹配即可, 但是最低要求为JDK8或以上版本<br><strong>步骤2</strong>: 选择当前模块需要使用的技术集<br><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240901235142.png" alt="20240901235142"><br>按照要求, 左侧选择web, 然后在中间技术集选择Spring Web即可, 选完后右侧出现了新的内容, 这就表示勾选成功了.<br>此处选择的SpringBoot的版本使用默认的就可以了, 需要说一点, SpringBoot的版本升级速度很快, 可能昨天创建工程的时候默认版本是2.x.x的版本, 今天创建的工程默认版本就变成了3.x.x了, 差别不大, 也不需要纠结, 并且还可以到配置文件中修改对应的版本<br><strong>步骤3</strong>: 编写Controller控制类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Rest模式</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/books&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getById</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;springboot is running...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;springboot is running...&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的SpringMVC的控制器是基于Rest风格开发, 当然此处也可以使用原始格式制作SpringMVC的程序也是一点问题没有<br>@RestController和@RequestMapping注解就是基于Restful开发的典型注解<br>做到这里SpringBoot程序的最基础的开发已经做完了, 现在就可以正常的运行Spring程序了. 但是我们发现Tomcat服务器没有配置, Spring也没有配置, 什么都没有配置能直接用? 这就是SpringBoot的强大之处. 之后的内部工作流程我们再娓娓道来, 先专心于SpringBoot开发的过程.<br><strong>步骤4</strong>: 运行自动生成的Application类<br><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240902001151.png" alt="20240902001151"><br>使用带main方法的java程序的运行形式来运行程序, 运行完毕后, 控制台输出上述信息.<br>可以看出, 运行的信息中包含了8080的端口, Tomcat这种熟悉的字样, 难道这里启动了Tomcat服务器? 没错, 确实已经启动, 但是服务器没有配置, 这服务器优势哪里来的呢? 不急, 先关注这种方式的启动逻辑, 我们现在就可以通过浏览器访问请求的路径, 测试功能是否工作正常了.<br>访问路径: <a href="http://localhost:8080/books">http://localhost:8080/books</a><br><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240902001533.png" alt="20240902001533"><br>当然底层逻辑还是很复杂的, 但是我们目前可以看到只有两个文件展现到了开发者面前</p><ul><li>pom.xml<br>这是maven的配置文件, 描述了当前工程构建时响应的配置信息<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.xiaoweii<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo6<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>demo6<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tag</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>17<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>配置中有两个信息需要关注，一个是parent，也就是当前工程继承了另外一个工程，干什么用的后面再说，还有依赖坐标，干什么用的后面再说</li><li>Application类<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo6Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Demo6Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>这个类的功能很简单, 就一句代码, 前面运行程序就是运行的这个类.<br>通过上面的制作, 发现SpringBoot程序兼职太好写了, 几乎什么都没有写, 功能就有了, 这也是SpringBoot技术为什么现在这么火的原因, 和Spring程序相比, SpringBoot在开发的过程中各个层面均具有优势<table><thead><tr><th><strong>类配置文件</strong></th><th><strong>Spring</strong></th><th><strong>SpringBoot</strong></th></tr></thead><tbody><tr><td>pom文件中的坐标</td><td><strong>手工添加</strong></td><td><strong>勾选添加</strong></td></tr><tr><td>web3.0配置类</td><td><strong>手工制作</strong></td><td><strong>无</strong></td></tr><tr><td>Spring&#x2F;SpringMVC配置类</td><td><strong>手工制作</strong></td><td><strong>无</strong></td></tr><tr><td>控制器</td><td><strong>手工制作</strong></td><td><strong>手工制作</strong></td></tr></tbody></table></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​# SpringBoot学习日记(一)&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在看完黑马的SpringBoot系列课程之后, 趁热打铁, 记忆还是崭新的时刻, 整</summary>
      
    
    
    
    <category term="SpringBoot学习日记" scheme="http://blog.xiaoweii.xyz/categories/SpringBoot%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="SpringBoot" scheme="http://blog.xiaoweii.xyz/tags/SpringBoot/"/>
    
    <category term="学习日记" scheme="http://blog.xiaoweii.xyz/tags/%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.xiaoweii.xyz/2024/08/27/hello-world/"/>
    <id>http://blog.xiaoweii.xyz/2024/08/27/hello-world/</id>
    <published>2024-08-27T01:49:03.195Z</published>
    <updated>2024-08-27T01:49:03.195Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>文章列表测试</title>
    <link href="http://blog.xiaoweii.xyz/2023/08/27/%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8%E6%B5%8B%E8%AF%951/"/>
    <id>http://blog.xiaoweii.xyz/2023/08/27/%E6%96%87%E7%AB%A0%E5%88%97%E8%A1%A8%E6%B5%8B%E8%AF%951/</id>
    <published>2023-08-27T02:59:51.000Z</published>
    <updated>2024-08-31T07:42:25.247Z</updated>
    
    <content type="html"><![CDATA[<p>写了一个标签tag,不知道能不能成功,让我重新上传一下</p><p>ceshi </p><p><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240829205531.png" alt="20240829205531"></p><div class="tag-plugin timeline ds-timeline" api="https://api.github.com/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;写了一个标签tag,不知道能不能成功,让我重新上传一下&lt;/p&gt;
&lt;p&gt;ceshi &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240829205531.png&quot; alt=&quot;2024</summary>
      
    
    
    
    <category term="测试1" scheme="http://blog.xiaoweii.xyz/categories/%E6%B5%8B%E8%AF%951/"/>
    
    
    <category term="测试" scheme="http://blog.xiaoweii.xyz/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>测试第一篇文章</title>
    <link href="http://blog.xiaoweii.xyz/2023/08/27/%E6%B5%8B%E8%AF%95%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://blog.xiaoweii.xyz/2023/08/27/%E6%B5%8B%E8%AF%95%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2023-08-27T02:59:51.000Z</published>
    <updated>2024-08-28T12:27:26.151Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line"><span class="type">int</span> a=b</span><br></pre></td></tr></table></figure><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>阿斯顿</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">    class Animal &#123;</span><br><span class="line">        +String name</span><br><span class="line">        +int age</span><br><span class="line">        +eat()</span><br><span class="line">        +sleep()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class Dog &#123;</span><br><span class="line">        +bark()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class Cat &#123;</span><br><span class="line">        +meow()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Animal &lt;|-- Dog</span><br><span class="line">    Animal &lt;|-- Cat</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;</summary>
      
    
    
    
    <category term="测试1" scheme="http://blog.xiaoweii.xyz/categories/%E6%B5%8B%E8%AF%951/"/>
    
    
    <category term="测试" scheme="http://blog.xiaoweii.xyz/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>面试题(一):Java基础部分</title>
    <link href="http://blog.xiaoweii.xyz/2023/04/02/%E9%9D%A2%E8%AF%95%E9%A2%98(%E4%B8%80):Java%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/"/>
    <id>http://blog.xiaoweii.xyz/2023/04/02/%E9%9D%A2%E8%AF%95%E9%A2%98(%E4%B8%80):Java%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/</id>
    <published>2023-04-02T13:59:51.000Z</published>
    <updated>2024-08-31T07:17:30.576Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java基础部分面试题"><a href="#Java基础部分面试题" class="headerlink" title="Java基础部分面试题"></a>Java基础部分面试题</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前是看着开发者客栈的面试题花了一两个月过了一遍面试题, 但是这些背的东西时隔半年, 在我的脑海当中只有简言片语还在弥留, 打算再过一遍八股文, 结果开发者客栈里的文章有好几篇质量很高的文章只有一个题头了, 有种物是人非的感觉, 不过这种面试题的网站还是很多的, 这次计划跟着一个up主程序员鱼皮, 这位大神写的面试鸭网站进行一套面试多面手的组合拳!</p><p>面试鸭网址: <a href="https://www.mianshiya.com/">https://www.mianshiya.com/</a><br>开发者客栈: <a href="https://www.developers.pub/">https://www.developers.pub/</a></p><p>如果有时间的话我们也可以再看一下开发者客栈, 他基本上每道题都给出了易于理解的实例代码, 这也是我为什么很喜欢开发者客栈的原因, 毕竟理科生嘛很不喜欢死板的背, 结合实例有学而以用之的成就感</p><h2 id="你认为的Java优势是什么"><a href="#你认为的Java优势是什么" class="headerlink" title="你认为的Java优势是什么?"></a>你认为的Java优势是什么?</h2><blockquote><p>可以从<strong>跨平台</strong>,<strong>垃圾回收</strong>,<strong>生态</strong>三个方面进行阐述</p></blockquote><h3 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h3><p>计算机当中识别的是二进制的语言, 每个平台,如macos,windows,Linux等等执行的机器码是不一样的, 所以你在这个平台写了一套程序, 在另一个平台跑起来的时候就会出现报错, 难道说我们做一套程序不能通用, 还需要每个平台写一套? 这极大增加了开发的成本, 但是Java为我们加了一层中间层JVM虚拟机, 帮助我们一次性编写, 多平台运行</p><p>编译执行过程是先把Java源代码编译成字节码, 字节码再由JVM解释或JIT编译执行, 而因为JIT编译时需要预热, 所以还提供了AOT(Ahead-of-Time Compliation), 可以直接把字节码转成机器码, 来让程序重启之后能迅速拉满战斗力</p><p>关键词 : <strong>JVM</strong>, <strong>一次编写多平台运行</strong>, <strong>编译执行过程</strong></p><h3 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java基础部分面试题&quot;&gt;&lt;a href=&quot;#Java基础部分面试题&quot; class=&quot;headerlink&quot; title=&quot;Java基础部分面试题&quot;&gt;&lt;/a&gt;Java基础部分面试题&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;head</summary>
      
    
    
    
    <category term="面试八股文" scheme="http://blog.xiaoweii.xyz/categories/%E9%9D%A2%E8%AF%95%E5%85%AB%E8%82%A1%E6%96%87/"/>
    
    
    <category term="面试" scheme="http://blog.xiaoweii.xyz/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="基础面试题" scheme="http://blog.xiaoweii.xyz/tags/%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
    <category term="八股文" scheme="http://blog.xiaoweii.xyz/tags/%E5%85%AB%E8%82%A1%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>仿12306售票系统编程日记(一)</title>
    <link href="http://blog.xiaoweii.xyz/2023/02/27/%E4%BB%BF12306%E5%94%AE%E7%A5%A8%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0(%E4%B8%80)/"/>
    <id>http://blog.xiaoweii.xyz/2023/02/27/%E4%BB%BF12306%E5%94%AE%E7%A5%A8%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0(%E4%B8%80)/</id>
    <published>2023-02-27T14:59:51.000Z</published>
    <updated>2024-08-29T13:37:10.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近发现一个非常好的项目, 可以练习SpringBoot, SpringCloud微服务还有项目中令人头疼的高并发问题, 是一个技术栈非常全面的java项目.</p><p>同时最近学习完了设计模式, 但是仅限于一些简单的代码, 没有在项目当中使用过, 通过本次项目在代码编写的过程中融入设计模式, 还有查漏补缺, 把之前可能遗忘的知识点通过项目实践进行回顾….</p><h1 id="仿12306售票系统编程日记Day01"><a href="#仿12306售票系统编程日记Day01" class="headerlink" title="仿12306售票系统编程日记Day01"></a>仿12306售票系统编程日记Day01</h1><h2 id="12306-模型设计-逻辑实现"><a href="#12306-模型设计-逻辑实现" class="headerlink" title="12306 模型设计&amp;逻辑实现"></a>12306 模型设计&amp;逻辑实现</h2><h3 id="余票查询-记录站-站余票"><a href="#余票查询-记录站-站余票" class="headerlink" title="余票查询 : 记录站-站余票"></a>余票查询 : 记录站-站余票</h3><p>12306 出色的高并发处理性能离不开它的模型设计, 余票查询中如果按照传统的多表查询, 那么面临每秒几十万次的请求时, 答案只有一个, 立马作废.</p><p>余票查询 : 可以理解为是每两个站点之间的票进行销售, 如果购买一张长途的车票, 要做的本质上是n多张两两站点之间的售卖, 将查询变成了单表查询, 极大地提高了查询效率, 而其余余票数量也随某一站点关联增减变化</p><p>看个栗子🌰:</p><p>假设有5个站点, 分别为A, B, C, D, E, 列车行驶的方向是ABCDE, 那么可供购买的余票方案有几种呢, 这是一个小学问题: 4+3+2+1&#x3D;10种, 假设我们从A-&gt;B有10张票, 那么很显然每一种的票数都是10张, 为什么呢? 因为总共就这10个座位, 再多就只能车顶上站着吹风了! 接着, 如果我们对某两个站点之间的票进行了购买, 那么势必要对其他两个站点之间的余票数量减少, 原因是受到了影响, 有的人疑惑, 这是因为两两站点并非两个相邻站点, 明白这点肯定是理解了. 假设我们买走了A-&gt;B的票, 那么首先A-&gt;B对应的余票就应该减少1, 受到影响的A-&gt;C, A-&gt;D, A-&gt;E都会随之减少1, 这又是为什么呢, 这是因为这里的A-&gt;B, A-&gt;C, A-&gt;D, A-&gt;E不是让你提供方案, 而是已经提出的方案, 箭头两端就是两个站点, 不是原本的固定的路线, 可以参考下图理解一下:</p><p><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240829205627.png" alt="20240829205627"></p><p>这里往后面多画了一点, 多买了一张C-D的票, 那么按照上面的思路确实是这个样子, 但是实际上并没有这么简单, 因为我们刚才所说的10张票之所以有10张票是因为假设在这趟列车上只有10个座位, 那么就会出现第一张票A-&gt;B和第二张C-D的票购买的是否是在一个座位, 如果在同一个位置, 那么此时A-&gt;D和A-&gt;E的余票仍然是9, 这是因为当你购买第一张票的时候, 已经对A-&gt;D和A-&gt;E造成了影响, 当你再对这个座位的第二张C-&gt;D购买时, 不再对其造成影响, 但是同时会对其他的一些情况造成影响, 可以结合图看一下</p><p><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240829211814.png" alt="20240829211814"><br>通过这张图片我们可以很直观的看出来到底谁受到了影响, 简单来说就是无论座位是否相同, 影响的应该是差集, 这样就可以避免少卖, 因为库存多减少了一嘛</p><p>了解过如何避免少卖, 我们应该如何避免多买呢?<br>我们通常可以使用简单的数据结构实现目的, 因为同一个位置, 且在相同站点之间只会有两种可能, 第一种有票, 第二种无票, 所以可以利用数字1和0表示有和没有, 那么座位1的信息在购买了A-&gt;B的余票之后, 信息可以存储为”1000”, 这样我们就可以实现余票数量的存储, 以及方便后续数据存储.</p><p><img src="https://xiaoweii.oss-cn-beijing.aliyuncs.com/img/20240829212940.png" alt="20240829212940"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近发现一个非常好的项目, 可以练习SpringBoot, SpringCloud微服务还有项目中令人头疼的高并发问题, 是一个技术栈非常全</summary>
      
    
    
    
    <category term="12306售票系统" scheme="http://blog.xiaoweii.xyz/categories/12306%E5%94%AE%E7%A5%A8%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="SpringBoot" scheme="http://blog.xiaoweii.xyz/tags/SpringBoot/"/>
    
    <category term="微服务" scheme="http://blog.xiaoweii.xyz/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="高并发" scheme="http://blog.xiaoweii.xyz/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
    
    <category term="项目日记" scheme="http://blog.xiaoweii.xyz/tags/%E9%A1%B9%E7%9B%AE%E6%97%A5%E8%AE%B0/"/>
    
    <category term="12306" scheme="http://blog.xiaoweii.xyz/tags/12306/"/>
    
  </entry>
  
</feed>
